Domain GerenciamentoCinema {
    Subdomain GestaoFilmes
    Subdomain GestaoUsuarios
    Subdomain GestaoSessoes
    Subdomain GestaoPagamentos
}

ContextMap {
    contains GestaoFilmes
    contains GestaoUsuarios
    contains GestaoSessoes
    contains GestaoPagamentos
    
    GestaoFilmes Shared-Kernel GestaoSessoes
    GestaoUsuarios Shared-Kernel GestaoSessoes
    GestaoPagamentos Shared-Kernel GestaoSessoes
    GestaoPagamentos Shared-Kernel GestaoUsuarios
    
}

BoundedContext GestaoFilmes implements GestaoFilmes {
    Aggregate Filme {
        Entity Filme {
            aggregateRoot
            
            -FilmeId id
            String titulo
            String sinopse
            int duracaoMinutos
            String classificacaoIndicativa
            List<String> generos
            Date dataLancamento
            boolean emCartaz
        }
        
        ValueObject FilmeId {
            String id
        }
        
        Service FilmeService {
            void adicionarFilme(@Filme filme);
            void removerFilmeExpirado();
            List<@Filme> listarFilmesEmCartaz();
        }
    }
}

BoundedContext GestaoSessoes implements GestaoSessoes {
    Aggregate Sessao {
        Entity Sessao {
            aggregateRoot
            
            -SessaoId id
            -FilmeId filme
            -SalaId sala
            DateTime horario
            boolean lotada
            -List<Assento> assentos
            
            def boolean verificarDisponibilidade(@AssentoId assento);
            def void bloquearSessaoLotada();
        }
        
        Entity Assento {
            -AssentoId id
            String fileira
            int numero
            boolean ocupado
        }
        
        ValueObject SessaoId {
            String id
        }
        
        ValueObject AssentoId {
            String id
        }

        ValueObject SalaId {
            String id
        }
        
        DomainEvent SessaoCanceladaEvento {
            -SessaoId sessaoId
            DateTime dataCancelamento
        }
    }
}

BoundedContext GestaoUsuarios implements GestaoUsuarios {
    Aggregate Usuario {
        Entity Usuario {
            aggregateRoot
            
            -UsuarioId id
            String nome
            String emailEndereco
            -Creditos creditos
            -List<Reserva> historico
        }
        
        ValueObject UsuarioId {
            String id
        }
        
        ValueObject Creditos {
            double valor
        }
        
        Entity Reserva {
            -ReservaId id
            -SessaoId sessao
            -AssentoId assento
            DateTime dataReserva
        }

        ValueObject ReservaId {
            String id
        }
    }
}

BoundedContext GestaoPagamentos implements GestaoPagamentos {
    Aggregate Pagamento {
        Entity Pagamento {
            aggregateRoot
            
            -PagamentoId id
            -UsuarioId usuario
            -SessaoId sessao
            double valor
            -StatusPagamento status
            DateTime dataPagamento
        }
        
        ValueObject PagamentoId {
            String id
        }
        
        Service CreditoService {
            void emitirCredito(@UsuarioId usuario, double valor);
            void utilizarCredito(@UsuarioId usuario, @PagamentoId pagamento);
        }
        
        enum StatusPagamento {
            PENDENTE,
            APROVADO,
            CANCELADO,
            REEMBOLSADO
        }
    }
}
